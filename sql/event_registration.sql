CREATE TYPE "Registrations_status " AS ENUM (
	'pending',
	'confirmed',
	'cancelled',
	'waitlisted',
	'checked_in'
);

CREATE TYPE "reg_status" AS ENUM (
	'pending',
	'confirmed',
	'cancelled',
	'waitlisted',
	'checked_in'
);

CREATE TYPE "session_type " AS ENUM (
	'keynote',
	'workshop',
	'panel',
	'breakout',
	'networking',
	'meal',
	'others'
);

CREATE TYPE "Invoices_status " AS ENUM (
	'draft',
	'sent',
	'paid',
	'overdue',
	'cancelled'
);

CREATE TYPE "payment_method " AS ENUM (
	'credit_card',
	'bank_transfer',
	'paypal',
	'check',
	'cash',
	'cbe ',
	'telebirr',
	'other'
);

CREATE TYPE "Payments_status " AS ENUM (
	'pending',
	'completed',
	'failed',
	'refunded'
);

CREATE TYPE "sponsor_level " AS ENUM (
	'platinum',
	'gold',
	'silver',
	'bronze',
	'other'
);

CREATE TYPE "notification_type " AS ENUM (
	'event',
	'payment',
	'system',
	'promotional'
);

CREATE TYPE "Sent_Emails_status" AS ENUM (
	'sent',
	'delivered',
	'opened',
	'clicked',
	'bounced',
	'failed'
);

CREATE TYPE "Registrations_payment_status" AS ENUM (
	'unpaid',
	'partial',
	'paid',
	'refunded',
	'ccancelled'
);

CREATE TABLE "Sent_Emails " (
	"email_id " INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"template_id " INTEGER,
	"recipient_email " VARCHAR(255),
	"subject " VARCHAR(255),
	"sent_at " TIMESTAMP,
	"status " SENT_EMAILS_STATUS DEFAULT sent,
	"event_id " INTEGER,
	"registration_id " INTEGER,
	"user_id " INTEGER,
	PRIMARY KEY("email_id ")
);




CREATE TABLE "Users " (
	"id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"email " VARCHAR(255),
	"password_hash " VARCHAR(255),
	"first_name " VARCHAR(255),
	"last_name " VARCHAR(255),
	"phone " TEXT,
	"profile_image_url " VARCHAR(255),
	"bio " TEXT,
	"is_active " BOOLEAN,
	"is_verified " BOOLEAN,
	"created_at " TIMESTAMP,
	"updated_at " TIMESTAMPTZ,
	"last_login " TIMESTAMP,
	"role" INTEGER,
	PRIMARY KEY("id")
);




CREATE TABLE "Event_organizers" (
	"Event_organizers_Id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"first_name" VARCHAR(50) NOT NULL,
	"last_name" VARCHAR(50) NOT NULL,
	"password_hash" VARCHAR(255) NOT NULL,
	"is_verifyed" BOOLEAN NOT NULL DEFAULT false,
	"is_active" BOOLEAN DEFAULT true,
	"company_name" VARCHAR(50),
	"job_title" VARCHAR(50),
	"contact" VARCHAR(50) NOT NULL,
	"company_address" VARCHAR(255) NOT NULL,
	"created_at" TIMESTAMP NOT NULL,
	"updated_at" TIMESTAMP NOT NULL,
	"role" INTEGER NOT NULL,
	PRIMARY KEY("Event_organizers_Id")
);




CREATE TABLE "Event_categories" (
	"Event_categories_Id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"name " VARCHAR(255),
	"description " TEXT,
	"event_id" INTEGER,
	PRIMARY KEY("Event_categories_Id")
);




CREATE TABLE "Events " (
	"event_id " INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"organizer_id " INTEGER,
	"title " VARCHAR(255),
	"description " VARCHAR(255),
	"start_datetime " DATE,
	"end_datetime " DATE,
	"location " VARCHAR(255),
	"venue_name " VARCHAR(255),
	"address " VARCHAR(50),
	"city" VARCHAR(255),
	"state " VARCHAR(255),
	"country " VARCHAR(255),
	"google_map_link" VARCHAR(255),
	"is_online " BOOLEAN,
	"online_event_url " VARCHAR(255),
	"event_image_url " VARCHAR(255),
	"max_attendees " INTEGER,
	"is_active " BOOLEAN,
	"registration_start " DATE,
	"registration_end" DATE,
	"created_at " TIMESTAMP,
	"updated_at" TIMESTAMP,
	PRIMARY KEY("event_id ")
);




CREATE TABLE "Ticket" (
	"ticket_id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"event_id " INTEGER,
	"name " TEXT,
	"description " TEXT,
	"price " DECIMAL(10,2),
	"is_active " BOOLEAN DEFAULT true,
	"available_from " DATE,
	"available_until " DATE,
	"max_available " INTEGER,
	"current_available" INTEGER,
	"includes_lunch " BOOLEAN DEFAULT false,
	"includes_dinner" BOOLEAN DEFAULT false,
	"includes_materials " BOOLEAN DEFAULT false,
	"seet_no" INTEGER,
	PRIMARY KEY("ticket_id")
);




CREATE TABLE "Registrations" (
	"registration_id " INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"event_id" INTEGER,
	"user_id " INTEGER,
	"ticket_id" INTEGER,
	"registration_date " TIMESTAMP,
	"status " REGISTRATIONS_STATUS ,
	"payment_status " REGISTRATIONS_PAYMENT_STATUS,
	"discount_code_id" INTEGER,
	"notes " TEXT,
	"checked_in_at " INTEGER,
	"accessibility_requirements " TEXT,
	"ticket_qr_code" TEXT,
	PRIMARY KEY("registration_id ")
);




CREATE TABLE "Registration_Additional_Attendees " (
	"additional_attendee_id " INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"registration_id " INTEGER,
	"first_name " VARCHAR(255),
	"last_name " VARCHAR(255),
	"email " VARCHAR(255),
	"phone " VARCHAR(15),
	"accessibility_requirements " TEXT,
	"ticket_qr_code" TEXT,
	PRIMARY KEY("additional_attendee_id ")
);




CREATE TABLE "Event_Sessions " (
	"session_id " INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"event_id " INTEGER,
	"title " VARCHAR(255),
	"description" TEXT,
	"start_datetime " DATE,
	"end_datetime " DATE,
	"location " VARCHAR(255),
	"max_attendees " INTEGER,
	"is_active " BOOLEAN,
	"is_expired" BOOLEAN DEFAULT false,
	"session_type " SESSION_TYPE ,
	PRIMARY KEY("session_id ")
);




CREATE TABLE "Session_Speakers" (
	"speaker_id " INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"user_id " INTEGER,
	"first_name " VARCHAR(50),
	"last_name " VARCHAR(255),
	"email " VARCHAR(255),
	"phone " VARCHAR(20),
	"organization" VARCHAR(100),
	"job_title " VARCHAR(100),
	"bio " TEXT,
	"profile_image_url " VARCHAR(255),
	"website_url " VARCHAR(255),
	"twitter_handle " VARCHAR(255),
	"linkedin_url " VARCHAR(255),
	"telegram_url" VARCHAR(255),
	PRIMARY KEY("speaker_id ")
);




CREATE TABLE "Session_Speaker_Mapping" (
	"session_id " INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"speaker_id " INTEGER,
	"speaking_order " INTEGER,
	PRIMARY KEY("session_id ")
);




CREATE TABLE "Invoices" (
	"invoice_id " INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"registration_id " INTEGER,
	"invoice_number " VARCHAR(255) UNIQUE,
	"issue_date " DATE,
	"due_date " DATE,
	"total_amount " DECIMAL(10,2),
	"tax_amount " DECIMAL(10,2),
	"discount_amount " DECIMAL(10,2),
	"status " REGISTRATIONS_STATUS  DEFAULT draft,
	"notes " TEXT,
	"payment_terms " TEXT,
	"expired_date" DATE,
	"is_expired" BOOLEAN,
	PRIMARY KEY("invoice_id ")
);




CREATE TABLE "Payments " (
	"payment_id " INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"invoice_id " INTEGER,
	"amount " DECIMAL,
	"payment_date " DATE,
	"payment_method " PAYMENT_METHOD ,
	"transaction_id " VARCHAR(255),
	"status " PAYMENTS_STATUS ,
	"is_processed_by_user" BOOLEAN DEFAULT true,
	"processed_by " INTEGER,
	"is_processed_by_agent " BOOLEAN,
	PRIMARY KEY("payment_id ")
);




CREATE TABLE "Discount_Codes " (
	"discount_code_id " INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"code " VARCHAR(255),
	"description " TEXT,
	"discount_value " DECIMAL(10,2),
	"start_date " DATE,
	"end_date " DECIMAL,
	"max_uses " INTEGER,
	"current_uses " INTEGER DEFAULT 0,
	"is_active " BOOLEAN,
	"created_by " INTEGER,
	"created_at " TIMESTAMP,
	PRIMARY KEY("discount_code_id ")
);




CREATE TABLE "Event_Discount_Codes" (
	"event_id " INTEGER UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"discount_code_id " INTEGER
);




CREATE TABLE "Event_Sponsors " (
	"sponsor_id " INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"event_id " INTEGER,
	"name " TEXT,
	"logo_url " VARCHAR(255),
	"sponsor_level " SPONSOR_LEVEL ,
	"website_url " VARCHAR(255),
	"contact_email " VARCHAR(255),
	"contact_phone " VARCHAR(255),
	"is_active " BOOLEAN,
	PRIMARY KEY("sponsor_id ")
);




CREATE TABLE "Email_Templates " (
	"template_id " INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"template_name " VARCHAR(255),
	"subject " VARCHAR(255),
	"body_html " TEXT,
	"body_text " TEXT,
	"is_active " BOOLEAN,
	PRIMARY KEY("template_id ")
);




CREATE TABLE "System_Admins" (
	"admin_id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"first_name" VARCHAR(255),
	"last_name" VARCHAR(255),
	"password_hash" VARCHAR(255),
	"role" INTEGER,
	"role_name" VARCHAR(255),
	"is_active" BOOLEAN DEFAULT true,
	PRIMARY KEY("admin_id")
) INHERITS ("Event_organizers", "Users ");




CREATE TABLE "Notifications " (
	"notification_id " INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"user_id " INTEGER,
	"title " VARCHAR(255),
	"message " TEXT,
	"notification_type " NOTIFICATION_TYPE ,
	"is_read" BOOLEAN,
	"created_at " TIMESTAMP,
	"related_event_id " INTEGER,
	"related_registration_id " INTEGER,
	PRIMARY KEY("notification_id ")
);



ALTER TABLE "Sent_Emails "
ADD FOREIGN KEY("template_id ") REFERENCES "Email_Templates "("template_id ")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "Event_organizers"
ADD FOREIGN KEY("role") REFERENCES "System_Admins"("role")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "Notifications "
ADD FOREIGN KEY("user_id ") REFERENCES "Users "("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "Registrations"
ADD FOREIGN KEY("user_id ") REFERENCES "Users "("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "Events "
ADD FOREIGN KEY("event_id ") REFERENCES "Ticket"("event_id ")
ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE "Ticket"
ADD FOREIGN KEY("ticket_id") REFERENCES "Registrations"("ticket_id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "Registrations"
ADD FOREIGN KEY("registration_id ") REFERENCES "Registration_Additional_Attendees "("registration_id ")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "Event_organizers"
ADD FOREIGN KEY("Event_organizers_Id") REFERENCES "Events "("organizer_id ")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "Event_categories"
ADD FOREIGN KEY("event_id") REFERENCES "Events "("event_id ")
ON UPDATE CASCADE ON DELETE RESTRICT;
ALTER TABLE "Registrations"
ADD FOREIGN KEY("event_id") REFERENCES "Events "("event_id ")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "Event_Sessions "
ADD FOREIGN KEY("event_id ") REFERENCES "Events "("event_id ")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "Session_Speakers"
ADD FOREIGN KEY("user_id ") REFERENCES "Users "("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "Event_Sessions "
ADD FOREIGN KEY("session_id ") REFERENCES "Session_Speaker_Mapping"("session_id ")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "Session_Speakers"
ADD FOREIGN KEY("speaker_id ") REFERENCES "Session_Speaker_Mapping"("speaker_id ")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "Registrations"
ADD FOREIGN KEY("registration_id ") REFERENCES "Invoices"("registration_id ")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "Invoices"
ADD FOREIGN KEY("invoice_id ") REFERENCES "Payments "("invoice_id ")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "Payments "
ADD FOREIGN KEY("processed_by ") REFERENCES "Users "("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "Discount_Codes "
ADD FOREIGN KEY("created_by ") REFERENCES "Event_organizers"("Event_organizers_Id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "Event_Discount_Codes"
ADD FOREIGN KEY("event_id ") REFERENCES "Events "("event_id ")
ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE "Discount_Codes "
ADD FOREIGN KEY("discount_code_id ") REFERENCES "Event_Discount_Codes"("discount_code_id ")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "Event_Sponsors "
ADD FOREIGN KEY("event_id ") REFERENCES "Events "("event_id ")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "Notifications "
ADD FOREIGN KEY("related_event_id ") REFERENCES "Events "("event_id ")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "Notifications "
ADD FOREIGN KEY("related_registration_id ") REFERENCES "Registrations"("event_id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "Sent_Emails "
ADD FOREIGN KEY("event_id ") REFERENCES "Events "("event_id ")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "Sent_Emails "
ADD FOREIGN KEY("registration_id ") REFERENCES "Registrations"("registration_id ")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "Sent_Emails "
ADD FOREIGN KEY("user_id ") REFERENCES "Users "("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;